<%
/*
 *  Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */

var action = request.getParameter('action'),
        username = request.getParameter('username'),
        verifyConfirmation = request.getParameter('verify-confirmation'),
        questionId = request.getParameter('question-id'),
        answer = request.getParameter('answer'),
        log = new Log('challenge_api'),
        res = {};

(function () {
    var recoveryModule = require('account-management').recovery;

    var verifyChallenge = function (username, confirmation, questionId, answer) {
        var key = recoveryModule.verifyChallenge(username, confirmation, questionId, answer);
        if (key.isVerified()) {
            res.verificationKey = key.getKey();
            res.error = 'false';
            res.msg = 'Challenge answer verified';
        } else {
            res.error = 'true';
            res.msg = 'Challenge answer mismatched';
        }
        print(res);
    }

    if (action == 'verifyChallenge') {
        verifyChallenge(username, verifyConfirmation, questionId, answer);
    } else {
        log.error('Endpoint does not exist');
    }

}());

%>

