<%
var fiber = require('fiber');
var log = new Log();

//var router=require('router');
/*fiber.app.init(function (context) {
 context.router=require('router');
 });

 var pipe=require('pipe');
 var pipeCommon=require('pipe-common');



 pipe.plug(pipeCommon.bodyParser);
 pipe.plug(pipeCommon.queryParser());
 pipe.plug(fiber.app.context.router);
 pipe.plug(pipeCommon.errHandler);
 */

//pipe.resolve(request,response,session);
var entity = require('/modules/entity.js');
require('/entities/schemas/Asset.js');
var Asset = entity.model('Asset');
var asset = new Asset({
    name: "John",
    attributes: {
        overview_name: "pet"
    }
});

log.info(asset);
log.info(asset.toJSON());

asset.save();


//log.info(Object.keys(from));
//log.info(Object.keys(from.attributes));
//log.info(from.attributes.constructor.name);
//log.info(from.id.constructor.name);
//log.info(from.test.constructor.name);
//log.info('Is id a nested object?'+isNestedObject(from.id));
//log.info('Is attributes a nested object?'+isNestedObject(from.attributes));

//utils.reflection.copyAllPropKeys(from, to);
//utils.reflection.copyPublicPropValues(from2, to2);

//utils.reflection.recursiveCopyPropValues(from2,to2);
//log.info(stringify(to));
//log.info('*********');
//log.info(stringify(to2));

//fiber.recursiveIterate(new File('/assets'));

/*
 var pipe = require('pipe');
 var pipeCommon = require('pipe-common');
 //var router = require('router');

 pipe.plug(pipeCommon.bodyParser);
 pipe.plug(pipeCommon.queryParser);


 var log = new Log();
 var fiber = require('/modules/fiber.js');

 fiber.createApp(require('/app.json'),function(app){
 log.info('Initializing');
 app.router=require('router');
 }).init();

 pipe.plug(fiber.getApp().app.router);
 pipe.plug(pipeCommon.errHandler);
 pipe.final(function(req,res,session){
 log.info('********End of Request*************');
 });

 pipe.resolve(request,response,session);      */

//var m=fiber.getApp().services.services;
//log.info(stringify(m));

//fiber.readConfig(require('/app.json'));

//fiber.init();

//pipe.resolve(request,response,session);

/*var patterns = require('utils').patterns;
 var log = new Log();

 var gp = new patterns.GenericPipe();

 gp.plug(function (context, handlers) {
 log.info('This is a test');
 handlers();
 });

 var simplePlugin = {
 handle: function (context, handlers) {
 log.info('Simple plugin');
 handlers();
 }
 }

 gp.plug(simplePlugin);
 gp.plug(function (context, handlers) {
 log.info('This is the end unless we throw an error');
 handlers();//{code:100,msg:'test'});
 });

 gp.plug(function (err, context, handlers) {
 log.info('error: ' + stringify(err));
 });*/



/*gp.plug(function(context,handlers){
 log.info('End.');
 });*/

//gp.resolve({},request,response,session);

%>