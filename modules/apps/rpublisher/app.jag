<%
var pipe = require('pipe');
var pipeCommon = require('pipe-common');
//var router = require('router');

pipe.plug(pipeCommon.bodyParser);
pipe.plug(pipeCommon.queryParser);




var log=new Log();
var fiber = require('/modules/fiber.js');

fiber.createApp(require('/app.json'),function(app){
     log.info('Initializing');
     app.router=require('router');
}).init();

pipe.plug(fiber.getApp().app.router);
pipe.plug(pipeCommon.errHandler);

pipe.resolve(request,response,session);

//var m=fiber.getApp().services.services;
//log.info(stringify(m));

//fiber.readConfig(require('/app.json'));

//fiber.init();

//pipe.resolve(request,response,session);

/*var patterns = require('utils').patterns;
var log = new Log();

var gp = new patterns.GenericPipe();

gp.plug(function (context, handlers) {
    log.info('This is a test');
    handlers();
});

var simplePlugin = {
    handle: function (context, handlers) {
        log.info('Simple plugin');
        handlers();
    }
}

gp.plug(simplePlugin);
gp.plug(function (context, handlers) {
    log.info('This is the end unless we throw an error');
    handlers();//{code:100,msg:'test'});
});

gp.plug(function (err, context, handlers) {
    log.info('error: ' + stringify(err));
}); */

/*gp.plug(function(context,handlers){
   log.info('End.');
});*/

//gp.resolve({},request,response,session);

%>